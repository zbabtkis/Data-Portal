<?php

function biogeog_portal_menu() {
	$items = array();

	$page_path = variable_get('data_portal_page_path', 'data/portal');

	$items[$page_path] = array(
		'title' => 'Data Portal',
		'description' => t('Web portal data collection'),
		'page callback' => 'biogeog_portal_page_gen',
		'access arguments' => array('access data portal'),
	  'type' => MENU_NORMAL_ITEM);
	$items['admin/config/data-portal'] = array(
		'title' => 'Data Portal Settings',
		'description' => t('Configuration for the data portal module'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('biogeog_portal_config'),
		'access arguments' => array('access data portal'),
	  'type' => MENU_NORMAL_ITEM);
	$items[$page_path . '/update/%'] = array(
		'title' => 'Data Portal Update',
		'page callback' => 'biogeog_portal_ajax_page',
		'page arguments' => array(3),
		'access arguments' => array('access data portal'),
	  'type' => MENU_NORMAL_ITEM);
	$items[$page_path . '/get-image/%'] = array(
		'title' => 'Data Portal Get Image',
		'page callback' => 'biogeog_portal_get_image',
		'page arguments' => array(3),
		'access arguments' => array('access data portal'),
	  'type' => MENU_NORMAL_ITEM);
	$items[$page_path . '/get-text/%'] = array(
		'title' => 'Data Portal Get Image',
		'page callback' => 'biogeog_portal_get_text',
		'page arguments' => array(3),
		'access arguments' => array('access data portal'),
	  'type' => MENU_NORMAL_ITEM);
	return($items);
}

function biogeog_portal_config() {
	$form = array();

	$fs_path = variable_get('data_portal_fs_path', '/');
	$page_path = variable_get('data_portal_page_path', '/data/portal');

	$form['data_portal_fs_path'] = array(
		'#type' => 'textfield',
		'#default_value' => $fs_path);
	//Customizable display path disabled for now due to menu argument placement issue.
	/*$form['data_portal_page_path'] = array(
		'#type' => 'textfield',
		'#default_value' => $page_path);*/
	$form['run_cec_data_up'] = array(
		'#type' => 'submit',
		'#value' => 'Run CEC Data Update',
		'#submit' => array('biogoeg_portal_run_db_up'));
	$form['recrawl'] = array(
		'#type' => 'submit',
		'#value' => 'Recrawl',
		'#submit' => array('biogeog_portal_run_recrawl'));
	return(system_settings_form($form));
}

function biogeog_portal_run_recrawl() {
	ini_set('max_execution_time', 99999999999999);
	$fs_path = variable_get('data_portal_fs_path', '/');
	$module = drupal_get_path('module', 'biogeog_portal');
	$site_root = exec('pwd');
	chdir($fs_path);
	exec("find . > $site_root/$module/db/dir_db.csv &");
	chdir($site_root);

	dsm("$site_root/$module/db/dir_db.csv");
}

function biogoeg_portal_run_db_up() {
	ini_set('max_execution_time', 99999999999999);
	$f = fopen(drupal_get_path('module', 'biogeog_portal') . '/db/dir_db.csv', 'r');
	$id = 0;
	// Holds dir name to check if name already exists in data structure.
	$struct = array();
	// Holds full data set including id, pid and dir name.
	$data = array();
	$last_dir = null;
	$cwd = null;
	db_delete('biogeog_portal_data')->execute();
	// Gets each file and directory in the current path split by '/'.
	while(($line = fgetcsv($f, 4000, '/')) != FALSE) {
		// Removing '.'' from beginning of path.
		array_shift($line);
		// First assume directory/file's parent id is 0.
		$pid = array(0,0);
		// For every directory/file name in the path with the key value as its directory level.
		foreach($line as $key=>$dir) {
			$cwd[] = $dir;
			// Should only add entry if the files at that directory level don't exist yet or if the directory value already exists at that level.
			if(!isset($struct[$key]) || !in_array($dir, $struct[$key])) {
				// Make the new file/directories id one more.
				$id++;
				$path = implode('/', $cwd);
				// Verifies that the level is not first level and does have a parent.
				if($key != 0) {
					// Set parent id equal to the id of the parent directory.
					$pid[0] = $data[$key-1][$last_dir]['pid'];
					$pid[1] = $data[$key-1][$last_dir]['id'];
				}
				else {
					// The pid is irrelevant and should be treated as 0.
					$pid = array(0,0);
				}
				// Adds the directory name to the filesystem structure.
				$struct[$key][$dir] = $dir;
				// Creates array of data for insertion into db.
				$data[$key][$dir] = array('name'=>$dir, 'id'=> $id, 'pid'=>$pid[1], 'ppid'=> $pid[0]);
				// Inserts data into database.
				db_insert('biogeog_portal_data')->fields(array('title' => $dir, 'pid' => $pid[1], 'ppid'=> $pid[0], 'id' => $id, 'path' => $path))->execute();
			}
			$last_dir = $dir;
		}
		$cwd = null;
	}
}

function biogeog_portal_pull_dirs($dir_id, $find_col) {
	$query = db_select('biogeog_portal_data','d');
	// Ged file id, file's parent id and title of the file.
	$query->fields('d',array('id','pid','ppid','title','path'))
	// On first view, we will show directories starting at level 4.
		  ->condition($find_col,$dir_id,'=');
	$results = $query->execute();
	return $results;
}

function biogeog_portal_ajax_page($dir_id) {
	if(isset($dir_id)) {
		$results = biogeog_portal_pull_dirs($dir_id, 'pid');
		$data = array();
		while($record = $results->fetchAssoc()) {
			$fileType = preg_match('/^.*\.(.*?)$/i', $record['title'], $ft);
			if(!isset($ft[1])) {
				$type = 'directory';
			} else {
				$type = $ft[1];
			}
			$record['type'] = $type;
		    $data['items'][] = $record;
		    $data['pid'] = $record['pid'];
		    $data['ppid'] = $record['ppid'];
		}

		$pathResult = biogeog_portal_pull_dirs($dir_id, 'id');

		while($r = $pathResult->fetchAssoc()) {
			$data['path'] = explode('/',$r['path']);
		}

		// Send current filesystem level objects to app Model.
		print(json_encode($data));
	} else {
		print("You haven't requested a directory id");
	}
}

function biogeog_portal_get_image($id) {
	if(isset($id)) {
		$query = db_select('biogeog_portal_data','d');
		// Ged file id, file's parent id and title of the file.
		$query->fields('d',array('id','path','title'))
		// On first view, we will show directories starting at level 4.
			  ->condition('id',$id,'=');
		$results = $query->execute();

		$data = array();
		while($record = $results->fetchAssoc()) {
			header('Content-Disposition: application; filename="'.$record['title'].'"');
		    print(readfile($record['path']));
		}
	} else {
		print("You haven't requested a directory id");
	}
}

function biogeog_portal_get_text($id) {
	if(isset($id)) {
		$query = db_select('biogeog_portal_data','d');
		// Ged file id, file's parent id and title of the file.
		$query->fields('d',array('id','path','title'))
		// On first view, we will show directories starting at level 4.
			  ->condition('id',$id,'=');
		$results = $query->execute();

		$fs_path = variable_get('data_portal_fs_path', '/');

		$data = array();
		while($record = $results->fetchAssoc()) {
		    print(readfile($fs_path . '/' . $record['path']));
		}
	} else {
		print("You haven't requested a directory id");
	}
}

function biogeog_portal_page_gen() {
	$module_path = '/' . drupal_get_path('module', 'biogeog_portal') . '/';
	// Select biogeog data portal db containing directory heirarchy.
	$query = db_select('biogeog_portal_data','d');
	// Ged file id, file's parent id and title of the file.
	$query->fields('d',array('id','pid','title'))
	// On first view, we will show directories starting at level 4.
		  ->condition('pid',4,'=');
	$results = $query->execute();
	$data = array();
	while($record = $results->fetchAssoc()) {
		dsm($record);
		$fileType = preg_match('/^.*\.(.*?)$/i', $record['title'], $ft);
		if(!isset($ft[1])) {
			$type = 'directory';
		} else {
			$type = 'file';
		}
		$record['type'] = $type;
        $data[] = $record;
    }
    drupal_add_library('system', 'ui.draggable');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/lib/handlebars.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/lib/underscore-min.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/lib/backbone-min.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/lib/antiscroll.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/app.settings.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/Model.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/View.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/Controller.js');
    drupal_add_js(drupal_get_path('module', 'biogeog_portal') . '/js/app.js');

    // Send current filesystem level objects to app Model.
	drupal_add_js(array('cec-data' => $data, 'path' => $module_path, 'menu' => $_GET['q']), 'setting');
	// Render web app using theme template
	$page = theme('biogeog_portal_template');
	return($page);
}
function biogeog_portal_permission() {
	$items = array();
	$items['access data portal'] = array(
		'title' => 'Access Data Portal Content',
		'description' => t('Access content from the biogeog data portal'));
	return($items);
}
function biogeog_portal_theme() {
	$themes = array(
		'biogeog_portal_template' => array(
			'template' => 'biogeog_portal_template',
		),
	);
	return($themes);
}
